class timer
{
    function main() {
        JMC.put("#> tf2:timer/main");
        JMC.put("#");
        JMC.put("# @handles timer mechanic");
        JMC.put("# @context marker");
        JMC.put("# @within tf2:__tick__");

        scoreboard players remove @s tf2.timer 1;
        timer.set_value();

        scoreboard players operation @s tf2.timer.sec = @s tf2.timer;
        scoreboard players operation @s tf2.timer.sec /= 20 tf2.const;
        scoreboard players operation @s tf2.timer.min = @s tf2.timer.sec;
        scoreboard players operation @s tf2.timer.sec %= 60 tf2.const;
        scoreboard players operation @s tf2.timer.min /= 60 tf2.const;
        execute if entity @s[tag=!tf2.multistage,tag=!tf2.overtime,tag=!tf2.setup_time] run timer.display.singlestage();
        JMC.put("# execute if entity @s[tag=tf2.multistage,tag=!tf2.overtime,tag=!tf2.setup_time] run timer.display.multistage();");
        execute if entity @s[tag=tf2.setup_time] run timer.display.setup_time();
        execute if entity @s[tag=tf2.overtime] run timer.display.overtime();

        execute if score @s tf2.timer matches ..1200 run timer.chat();
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 0 run timer.exit_setup();
        execute if score @s[tag=!tf2.setup_time] tf2.timer matches 0 run timer.zero();
        execute if score @s tf2.timer matches -100 run reset.as_marker();
    } function chat() {
        JMC.put("#> tf2:timer/chat");
        JMC.put("#");
        JMC.put("# @within tf2:timer/main");
        JMC.put("# @handles timer-related dialogue lines");
        JMC.put("# @reads");
        JMC.put("#   score @s tf2.batch_number");
        JMC.put("#   score ⟨players⟩ tf2.batch_number");
        JMC.put("#       Finds the players that belong to this game marker.");
        JMC.put("#   predicate tf2:coin_flip");
        JMC.put("#       50/50 chance to pick one of two dialogue lines.");

        scoreboard players operation $local tf2.batch_number = @s tf2.batch_number;
        execute as @a if score @s tf2.batch_number = $local tf2.batch_number run tag @s add tf2.current;
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 1200 run tellraw @a[tag=tf2.current] {"text":"Mission begins in sixty seconds.","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 600 run tellraw @a[tag=tf2.current] {"text":"Mission begins in thirty seconds.","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 200 run tellraw @a[tag=tf2.current] {"text":"Mission begins in ten seconds.","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 100 run tellraw @a[tag=tf2.current] {"text":"Five...","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 80 run tellraw @a[tag=tf2.current] {"text":"Four..","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 60 run tellraw @a[tag=tf2.current] {"text":"Three..","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 40 run tellraw @a[tag=tf2.current] {"text":"Two..","bold":true,"color":"white"};
        execute if score @s[tag=tf2.setup_time] tf2.timer matches 20 run tellraw @a[tag=tf2.current] {"text":"One.","bold":true,"italic":true,"color":"white"};

        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 1200 run tellraw @a[tag=tf2.current] {"text":"Mission ends in sixty seconds.","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 600 run tellraw @a[tag=tf2.current] {"text":"Mission ends in thirty seconds.","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 200 run tellraw @a[tag=tf2.current] {"text":"Mission ends in ten seconds.","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 100 run tellraw @a[tag=tf2.current] {"text":"Five!","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 80 run tellraw @a[tag=tf2.current] {"text":"Four!","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 60 run tellraw @a[tag=tf2.current] {"text":"Three!","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 40 run tellraw @a[tag=tf2.current] {"text":"Two!","bold":true,"color":"white"};
        execute if score @s[tag=!tf2.overtime,tag=!tf2.setup_time] tf2.timer matches 20 run tellraw @a[tag=tf2.current] {"text":"One!","bold":true,"italic":true,"color":"white"};

        $temp = execute if predicate tf2:coin_flip;
        execute if score @s[tag=tf2.overtime] tf2.timer matches 1200 if score $temp tf2.var matches 1 run tellraw @a[tag=tf2.current] {"text":"Overtime!","bold":true,"color":"white"};
        execute if score @s[tag=tf2.overtime] tf2.timer matches 1200 unless score $temp tf2.var matches 1 run tellraw @a[tag=tf2.current] {"text":"Overtime...","bold":true,"color":"white"};
    } 

    function set_value() {
        Hardcode.repeat("_i_", ()=>{execute store result bossbar tf2:timer__i_ value run scoreboard players get @s[scores={tf2.batch_number=_i_}] tf2.timer;}, start = 1, stop = 6);
    } function set_max() {
        Hardcode.repeat("_i_", ()=>{execute store result bossbar tf2:timer__i_ max run scoreboard players get @s[scores={tf2.batch_number=_i_}] tf2.timer;}, start = 1, stop = 6);
        timer.set_value();
    } 

    function show() {
        Hardcode.repeat("_i_", ()=>{
            execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ visible true;
            execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ players @a[scores={tf2.batch_number=_i_}];
            execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ color white;
            }, start = 1, stop = 6
        );
    } function hide() {
        Hardcode.repeat("_i_", ()=>{execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ visible false;}, start = 1, stop = 6);
    } 

    function begin_setup() {
        tag @s add tf2.setup_time;
        execute store result score @s tf2.timer run data get entity @s data.map.setup_time 20;
        Hardcode.repeat("_i_", ()=>{execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ color green;}, start = 1, stop = 6);
        timer.set_max();
        JMC.put("# placeholder for now");
        execute if data entity @s {data:{map:{name: "test"}}} run fill -508 1 -517 -517 1 -508 minecraft:cobblestone_wall replace minecraft:blue_carpet;
    } function exit_setup() {
        execute if data entity @s {data:{map:{name: "test"}}} run fill -508 1 -517 -517 1 -508 minecraft:blue_carpet replace minecraft:cobblestone_wall;
        execute store result score @s tf2.timer run data get entity @s data.map.timer 20;
        timer.set_max();
        timer.show();
        tag @s remove tf2.setup_time;
    } 

    function zero() {
        scoreboard players operation $local tf2.batch_number = @s tf2.batch_number;
        execute as @e[type=marker,tag=tf2.control_point] if score @s tf2.batch_number = $local tf2.batch_number run tag @s add tf2.current;
        tag @e[tag=tf2.current] remove tf2.overtime;
        execute as @e[type=marker,tag=tf2.current] if score @s tf2.blu_progress < @s tf2.capture_threshold if score @s tf2.red_progress < @s tf2.capture_threshold run tag @s add tf2.overtime;
        execute unless entity @s[tag=tf2.overtime] if entity @e[type=marker,tag=tf2.current,tag=tf2.overtime] run timer.overtime();
        tag @e[type=marker] remove tf2.current;
        execute if score @s tf2.timer matches 0 run timer.end_game();
    } function overtime() {
        tag @s add tf2.overtime;
        scoreboard players set @s tf2.timer 1200;
        Hardcode.repeat("_i_", ()=>{execute if score @s tf2.batch_number matches _i_ run bossbar set tf2:timer__i_ color red;}, start = 1, stop = 6);
        timer.set_max();
    } function end_game() {
        scoreboard players reset $winner tf2.team;
        $temp = tf2.gamemode:@s;
        $temp %= 4;
        execute if score $temp tf2.var matches 1 run scoreboard players set $winner tf2.team 1;
        execute unless score $temp tf2.var matches 1 run scoreboard players set $winner tf2.team -1;
        reset.announce_winner();
    }

    class display {
        function singlestage() {
            Hardcode.repeat("_i_", ()=>{
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=10..59}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Round - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=0..9}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Round - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":0"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];},
                start=1, stop=6
            );
        }
        function setup_time() {
            Hardcode.repeat("_i_", ()=>{
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=10..59}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Setup - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=0..9}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Setup - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":0"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];},
                start=1, stop=6
            );
        }
        function overtime() {
            Hardcode.repeat("_i_", ()=>{
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=10..59}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Overtime! - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];
                execute if entity @s[scores={tf2.batch_number=_i_,tf2.timer.sec=0..9}] run bossbar set tf2:timer__i_ name [{"text":"","font":"minecraft:default"},{"nbt":"info[_i_][7].left","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"text":"Overtime! - "},{"score":{"name":"@s","objective":"tf2.timer.min"}},{"text":":0"},{"score":{"name":"@s","objective":"tf2.timer.sec"}},{"text":" remaining"},{"nbt":"info[_i_][7].mid","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][0].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][1].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][2].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][3].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][4].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][5].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][6].main","storage":"tf2:control_points","interpret":true,"font":"tf2:square"},{"nbt":"info[_i_][7].right","storage":"tf2:control_points","interpret":true,"font":"tf2:square"}];},
                start=1, stop=6
            );
        }
    }
}
