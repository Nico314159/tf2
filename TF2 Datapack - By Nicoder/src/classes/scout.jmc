Item.create(elytra, elytra);

new trim_pattern(scout) {
    "asset_id": "tf2:scout",
    "description": {
        "translate": "trim_pattern.tf2.scout"
    },
    "template_item": "minecraft:stick"
}

class Class.Scout {
    new loot_tables(scattergun) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
                    "name": "tf2:crossbow_base",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Scattergun",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": "{
                                CustomModelData: 31000,
                                retina: {HorizontalCount: 3, VerticalCount: 3, CenteredCount: 0, EndpointEntity: true, TargetEntities: true, SpreadFactor: [30, 170], MaxRecursionDepth: 100},
                                attributes: {damage: {base: 6, maxRamp: 1.75}, attackDelay: 0.625d, reloadDelay: [0.7d, 0.5d], clip: 6, ammo: 32},
                                controls: {main_fire: true, alt_fire: false, reload: 1},
                                Unbreakable: 1b
                            }"
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(pistol) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
                    "name": "tf2:crossbow_base",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Pistol",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": "{
                                CustomModelData: 32000,
                                retina: {HorizontalCount: 1, VerticalCount: 1, CenteredCount: 0, EndpointEntity: true, TargetEntities: true, SpreadFactor: [40, 85], MaxRecursionDepth: 100},
                                attributes: {damage: {base: 15}, attackDelay: 0.15d, reloadDelay: [1.005d, 1.005d], clip: 12, ammo: 40},
                                controls: {main_fire: true, alt_fire: false, reload: 3},
                                Unbreakable: 1b
                            }"
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(baseball_bat) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
                    "name": "tf2:melee_base",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Baseball Bat",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": "{
                                CustomModelData: 33000,
                                retina: {HorizontalCount: 1, VerticalCount: 1, CenteredCount: 0, EndpointEntity: false, TargetEntities: true, SpreadFactor: [0, 0], MaxRecursionDepth: 5},
                                attributes: {damage: {base: 35}, attackDelay: 0.5d, range: 3.2d, isMelee: true},
                                controls: {main_fire: true, alt_fire: false, reload: 0}
                            }"
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(_model) {
        "pools": [{
            "rolls": 1,
            "entries": [{
                "type": "minecraft:item",
                "name": "minecraft:iron_leggings",
                "functions": [
                    {
                        "function": "minecraft:reference",
                        "name": "tf2:apply_team_material"
                    },
                    {
                        "function": "minecraft:set_nbt",
                        "tag": "{Trim: {pattern: \"tf2:scout\"}}"
                    }
                ]
            }]
        }]
    }

    @lazy
    function give() {
        clear @s;
        loot replace entity @s hotbar.0 loot tf2:class/scout/scattergun;
        loot replace entity @s hotbar.1 loot tf2:class/scout/pistol;
        loot replace entity @s hotbar.2 loot tf2:class/scout/baseball_bat;
        loot replace entity @s armor.legs loot tf2:class/scout/_model;

        tf2.primary_maxClip:@s = tf2.primary_clip:@s = data get entity @s Inventory[0].tag.attributes.clip;
        tf2.primary_maxAmmo:@s = tf2.primary_ammo:@s = data get entity @s Inventory[0].tag.attributes.ammo;
        tf2.secondary_maxClip:@s = tf2.secondary_clip:@s = data get entity @s Inventory[1].tag.attributes.clip;
        tf2.secondary_maxAmmo:@s = tf2.secondary_ammo:@s = data get entity @s Inventory[1].tag.attributes.ammo;
    }
    @lazy
    function tick() {
        Weapons.get_ammo();
        Weapons.actionbar();
        Weapons.set_ammo();

        if (predicate tf2:grounded) tag @s add tf2.can_double_jump;
        if (tf2.elytra_detect:@s >= 1) {
            retina.__variable__:$input_pitch = data get entity @s Rotation[1] 10;
            retina.__variable__:$input_yaw = data get entity @s Rotation[0] 10;
            function retina:math/gimbal_to_vec;
            delta.api.launch:$x = retina.__variable__:$output_vec3.X;
            delta.api.launch:$x *= 2;
            delta.api.launch:$y = 5000;
            delta.api.launch:$z = retina.__variable__:$output_vec3.Z;
            delta.api.launch:$z *= 2;
            function delta:api/launch_xyz;

            Item.clear(elytra, @s);
            tf2.elytra_detect:@s = 0;
            tf2.permanent.double_jumps:@s++;
            tag @s remove tf2.can_double_jump;
        }

        Class.Scout.inventory_lock();
    }
    function inventory_lock() {
        item replace entity @s weapon.offhand with air;
        loot replace entity @s hotbar.0 loot tf2:class/scout/scattergun;
        $_count_ = clear @s crossbow{CustomModelData: 31000} 0;
        if ($_count_ != 1) clear @s crossbow{CustomModelData: 31000};
        if ($_count_ != 1) loot replace entity @s hotbar.0 loot tf2:class/scout/scattergun;

        loot replace entity @s hotbar.1 loot tf2:class/scout/pistol;
        $_count_ = clear @s crossbow{CustomModelData: 32000} 0;
        if ($_count_ != 1) clear @s crossbow{CustomModelData: 32000};
        if ($_count_ != 1) loot replace entity @s hotbar.1 loot tf2:class/scout/pistol;

        loot replace entity @s hotbar.2 loot tf2:class/scout/baseball_bat;
        $_count_ = clear @s snowball{CustomModelData: 33000} 0;
        if ($_count_ != 1) clear @s snowball{CustomModelData: 33000};
        if ($_count_ != 1) loot replace entity @s hotbar.2 loot tf2:class/scout/baseball_bat;

        loot replace entity @s armor.legs loot tf2:class/scout/_model;
        $_count_ = clear @s iron_leggings{Trim: {pattern: "tf2:scout"}} 0;
        if ($_count_ != 1) clear @s iron_leggings{Trim: {pattern: "tf2:scout"}};
        if ($_count_ != 1) loot replace entity @s armor.legs loot tf2:class/scout/_model;

        if (entity @s[tag=tf2.can_double_jump]) {
            Item.replaceEntity(elytra, @s, "armor.chest");
            $_count_ = Item.clear(elytra, @s, 0);
            if ($_count_ != 1) Item.clear(elytra, @s);
            if ($_count_ != 1) Item.replaceEntity(elytra, @s, "armor.chest");
        }
    }
}