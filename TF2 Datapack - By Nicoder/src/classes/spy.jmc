class Class.Spy {
    new loot_tables(revolver) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
                    "value": "tf2:crossbow_base",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Revolver",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_components",
                            "components": {
                                "minecraft:custom_model_data": 11000,
                                "minecraft:unbreakable": {"show_in_tooltip": false}
                            }
                        },
                        {
                            "function": "minecraft:set_custom_data",
                            "tag": "{
                                retina: {HorizontalCount: 1, VerticalCount: 1, CenteredCount: 0, EndpointEntity: true, TargetEntities: true, SpreadFactor: [25, 50], MaxRecursionDepth: 100},
                                attributes: {damage: {base: 40, maxRamp: 1.5}, attackDelay: 0.5d, reloadDelay: [1.133d, 1.133d], clip: 6, ammo: 24, spreadRecovery: 25},
                                controls: {main_fire: true, alt_fire: false, reload: 3}
                            }"
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(sapper) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:item",
					"name": "minecraft:clay_ball",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Sapper (not yet implemented)",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_components",
                            "components": {
                                "minecraft:custom_model_data": 12000,
                                "minecraft:unbreakable": {"show_in_tooltip": false}
                            }
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(butterfly_knife) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
                    "value": "tf2:melee_base",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Butterfly Knife",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_components",
                            "components": {
                                "minecraft:custom_model_data": 13000,
                                "minecraft:unbreakable": {"show_in_tooltip": false}
                            }
                        },
                        {
                            "function": "minecraft:set_custom_data",
                            "tag": "{
                                retina: {HorizontalCount: 1, VerticalCount: 1, CenteredCount: 0, EndpointEntity: false, TargetEntities: true, SpreadFactor: [0, 0], MaxRecursionDepth: 5},
                                attributes: {damage: {base: 40}, attackDelay: 0.8d, range: 3.2d, isMelee: true, canBackstab: false},
                                controls: {main_fire: true, alt_fire: false, reload: 0}
                            }"
                        }
                    ]
                }
            ]
        }]
    }
    new item_modifiers(raise_knife) [
        {
            "function": "minecraft:set_custom_data",
            "tag": "{attributes: {canBackstab: true}}"
        },
        {
            "function": "minecraft:set_custom_model_data",
            "value": {
                "type": "minecraft:score",
                "target": {
                    "type": "minecraft:fixed",
                    "name": "$CMD"
                },
                "score": "tf2.var",
                "scale": 1
            }
        }
    ];
    
    new loot_tables(disguise_kit) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:item",
					"name": "minecraft:clay_ball",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "text": "Disguise Kit (not yet implemented)",
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_components",
                            "components": {
                                "minecraft:custom_model_data": 14000,
                                "minecraft:unbreakable": {"show_in_tooltip": false}
                            }
                        }
                    ]
                }
            ]
        }]
    }
    new loot_tables(invis_watch) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:item",
					"name": "minecraft:clay_ball",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "name": {
                                "translate": "tf2.invis_watch",
                                "fallback": "Invis Watch (%s to cloak)",
                                "with": [{"keybind": "key.swapOffhand"}],
                                "color": "gray",
                                "italic": true
                            }
                        },
                        {
                            "function": "minecraft:set_components",
                            "components": {
                                "minecraft:custom_model_data": 15000,
                                "minecraft:max_damage": 600,
                                "minecraft:damage": 0,
                                "minecraft:max_stack_size": 1
                            }
                        },
                        { 
                            "function": "minecraft:set_custom_data", 
                            "tag": "{cloak: 'cloak'}" 
                        },
                        {
							"function": "minecraft:set_damage",
							"damage": {
								"type": "minecraft:score",
								"target": "this",
								"score": "tf2.cloak",
								"scale": 0.001666
							}
						}
                    ]
                }
            ]
        }]
    }
    new loot_tables(invis_watch_gui_only) {
        "pools": [{
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:loot_table",
					"value": "tf2:class/spy/invis_watch",
                    "functions": [
                        {
                            "function": "minecraft:set_components", 
                            "components": {"minecraft:custom_model_data": 15001} 
                        },
                        { 
                            "function": "minecraft:set_custom_data", 
                            "tag": "{cloak: 'uncloak'}" 
                        }
                    ]
                }
            ]
        }]
    }

    function give() {
        clear @s;
        loot replace entity @s hotbar.0 loot tf2:class/spy/revolver;
        loot replace entity @s hotbar.1 loot tf2:class/spy/sapper;
        loot replace entity @s hotbar.2 loot tf2:class/spy/butterfly_knife;
        loot replace entity @s hotbar.3 loot tf2:class/spy/disguise_kit;
        loot replace entity @s weapon.offhand loot tf2:class/spy/invis_watch;
        // loot replace entity @s armor.legs loot tf2:class/spy/_model;

        lookup::inventory = @s::Inventory;
        tf2.primary_maxClip:@s = tf2.primary_clip:@s = lookup::inventory[0].components.minecraft:custom_data.attributes.clip;
        tf2.primary_maxAmmo:@s = tf2.primary_ammo:@s = lookup::inventory[0].components.minecraft:custom_data.attributes.ammo;
        tf2.secondary_maxClip:@s = tf2.secondary_clip:@s = tf2.secondary_maxAmmo:@s = tf2.secondary_ammo:@s = 0;
        tf2.is_invisible:@s = 0;
        tf2.cloak:@s = 600;
    }

    function cloak() {
        if (tf2.cloak:@s <= 0) {
            return run swap_hands();
        }
        tf2.is_invisible:@s = 1;
        effect give @s[scores={tf2.is_invisible=1}] invisibility infinite 0 true;
    }
    function uncloak() {
        tf2.is_invisible:@s = 0;
        effect clear @s[scores={tf2.is_invisible=0}] invisibility;
    }

    function tick() {
        Weapons.get_ammo();
        HUD.actionbar();
        Weapons.set_ammo();

        // Toggle cloak by switching hands
        if (items entity @s[scores={tf2.is_invisible=0}] weapon.mainhand clay_ball[custom_data~{cloak: 'cloak'}]) {
            this.cloak();
        }
        if (items entity @s[scores={tf2.is_invisible=1}] weapon.mainhand clay_ball[custom_data~{cloak: 'uncloak'}]) {
            this.uncloak();
        }

        // Cloak drain and replenishment over time
        tf2.cloak:@s[scores={tf2.is_invisible=0, tf2.cloak=..599}]++;
        tf2.cloak:@s[scores={tf2.is_invisible=1}] -= 3;
        if (tf2.cloak:@s[scores={tf2.is_invisible=1}] <= 0) {
            this.uncloak();
        }

        this.inventory_lock();
    }

    function inventory_lock() {
        if (tf2.is_invisible:@s) {
            return run this.disable_attacking();
        }

        item replace entity @s armor.chest with air;

        loot replace entity @s hotbar.0 loot tf2:class/spy/revolver;
        $_count_ = clear @s crossbow[custom_model_data=11000] 0;
        if ($_count_ != 1) clear @s crossbow[custom_model_data=11000];
        if ($_count_ != 1) loot replace entity @s hotbar.0 loot tf2:class/spy/revolver;

        loot replace entity @s hotbar.1 loot tf2:class/spy/sapper;
        $_count_ = clear @s clay_ball[custom_model_data=12000] 0;
        if ($_count_ != 1) clear @s clay_ball[custom_model_data=12000];
        if ($_count_ != 1) loot replace entity @s hotbar.1 loot tf2:class/spy/sapper;

        loot replace entity @s hotbar.2 loot tf2:class/spy/butterfly_knife;
        $_count_ = clear @s snowball[custom_model_data=13000] 0;
        if ($_count_ != 1) clear @s snowball[custom_model_data=13000];
        if ($_count_ != 1) loot replace entity @s hotbar.2 loot tf2:class/spy/butterfly_knife;

        loot replace entity @s hotbar.3 loot tf2:class/spy/disguise_kit;
        $_count_ = clear @s clay_ball[custom_model_data=14000] 0;
        if ($_count_ != 1) clear @s clay_ball[custom_model_data=14000];
        if ($_count_ != 1) loot replace entity @s hotbar.3 loot tf2:class/spy/disguise_kit;

        loot replace entity @s weapon.offhand loot tf2:class/spy/invis_watch;
        $_count_ = clear @s clay_ball[custom_model_data=15000] 0;
        if ($_count_ != 1) clear @s clay_ball[custom_model_data=15000];
        if ($_count_ != 1) loot replace entity @s weapon.offhand loot tf2:class/spy/invis_watch;

        clear @s clay_ball[minecraft:custom_data~{cloak: 'uncloak'}];

        if (tf2.current_slot:@s == 2) {
            this.determine_backstab();
        }
        // loot replace entity @s armor.legs loot tf2:class/spy/_model;
        // $_count_ = clear @s iron_leggings 0;
        // if ($_count_ != 1) clear @s iron_leggings;
        // if ($_count_ != 1) loot replace entity @s armor.legs loot tf2:class/spy/_model;
    }
    function disable_attacking() {
        clear @s *[!custom_data~{cloak: 'uncloak'}, !custom_model_data=10];
        loot replace entity @s weapon.offhand loot tf2:class/spy/invis_watch_gui_only;
    }

    function determine_backstab() {
        function retina:traverse/setup;
        if (!data storage retina:output {Target: "ENTITY"}) {
            return fail;
        }
        if (entity @a[tag=retina.target,gamemode=spectator]) {
            return fail;
        }

        tf2.team:$current = tf2.team:@s;
        execute as @a[tag=retina.target,limit=1]
                if score @s tf2.team = $current tf2.team
                run return fail;

        $enemy_dist = retina:output::Distance * 10;
        $backstab_range = @s::SelectedItem.components."minecraft:custom_data".attributes.range * 10;
        if ($enemy_dist > $backstab_range) {return fail;}

        $theta_1 = @s::Rotation[0];
        $theta_2 = @a[tag=retina.target,limit=1]::Rotation[0];
        $theta_1 -= $theta_2;
        if (!$theta_1 matches -90..90) {return fail;}

        $CMD = @s::SelectedItem.components."minecraft:custom_model_data" * 0.1;
        $CMD *= 10;
        $CMD ++;
        item modify entity @s weapon.mainhand tf2:class/spy/raise_knife;
    }
}