TextProps.font("font", "_foo_", "tf2:_foo_");
TextProp.font("default_font", "minecraft:default");
TextProp.hoverText(
    "info_atk_def",
    "&<red>RED &<white>starts with all the control points, and &<blue>BLU must capture &<italic>all &<!italic>of them in order to win. Once a point is taken, it cannot be reclaimed by &<red>RED. &<white>If the timer runs out, &<red>RED &<white>wins no matter how much progress &<blue>BLU &<white>has made."
);
TextProp.hoverText(
    "info_control_points",
    "Each team starts out owning half the control points; whichever team captures all of them wins. Stalemate if the timer runs out."
);
TextProps.nbt(
    propertyName = "space",
    indexString  = "_part_",
    type         = storage,
    source       = "tf2:control_points",
    path         = info[$(i)][7]._part_,
    interpret    = true
);
TextProps.nbt(
    propertyName = "point",
    indexString  = "_j_",
    type         = storage,
    source       = "tf2:control_points",
    path         = info[$(i)][_j_].main,
    interpret    = true
);
TextProps.nbt(
    propertyName = "gui_wheel",
    indexString  = "_path_",
    type         = storage,
    source       = "tf2.__temp__:lookup",
    path         = points[0].wheel._path_,
    interpret    = true
);
TextProps.nbt(
    propertyName = "item_of",
    indexString  = "_selector_",
    type         = entity,
    source       = "_selector_",
    path         = SelectedItem.tag.display.Name,
    interpret    = true
);
TextProp.keybind("main_fire", "key.use");
TextProp.keybind("alt_fire",  "key.swapOffhand");
TextProp.keybind("reload",    "key.drop");
TextProp.keybind("not_used",  "key.attack");
TextProps.keybind(propertyName="control", indexString="_i_", keybind="key._i_");

Trigger.add(controls, () => {
   Text.tellraw(@a[tag=tf2.is_playing], `
&<underlined>Control Scheme:
Main Attack (both guns && melee) = &<control(use)>
Alt Fire (zoom-in, revving, etc) = &<control(swapOffhand)>
Reload = &<control(drop)>
`);
});